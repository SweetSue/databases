// I.1. create a database world
CREATE DATABASE world;

// I.2. create a table country
CREATE TABLE IF NOT EXISTS country (
    Country_id INT AUTO_INCREMENT,
    Country_name VARCHAR(255) NOT NULL,
    Continent VARCHAR(255) NOT NULL,
    Country_surface INT NOT NULL,
    Country_population INT NOT NULL,
    PRIMARY KEY (Country_id)
) ENGINE=INNODB;

// I.3. create a table city 
CREATE TABLE IF NOT EXISTS city (
    City_id INT AUTO_INCREMENT,
    City_name VARCHAR(255) NOT NULL,
    City_population INT NOT NULL,
    FK_country INT NOT NULL,
    PRIMARY KEY (City_id),
    FOREIGN KEY (FK_country)
    REFERENCES country(Country_id)
) ENGINE=INNODB;

// I.4. Insert 10-20 rows in country table with relevant fields
mysql> INSERT INTO country (Country_name, Continent, Country_surface, Country_population)
    -> VALUES
    -> ('China', 'Asia', 9596961, 1396740000),
    -> ('USA', 'Americas', 9525067, 328972000),
    -> ('India', 'Asia', 3287263, 1345520000),
    -> ('France', 'Europe', 640679, 66989000),
    -> ('Italy', 'Europe', 301339, 60375749),
    -> ('Thailand', 'Asia', 513120, 66347555),
    -> ('Netherlands', 'Europe', 41850, 17309200),
    -> ('Greece', 'Europe', 131990, 10741165),
    -> ('Brazil', 'Americas', 8515767, 209729000),
    -> ('Ethiopia', 'Africa', 1104300, 98665000),
    -> ('Morocco', 'Africa', 446550, 34980000),
    -> ('Sweden', 'Europe', 450295, 10238627),
    -> ('Australia', 'Oceania', 7692024, 25312900),
    -> ('Mexico', 'Americas', 1964375, 126577691),
    -> ('Germany', 'Europe', 357114, 82979100),
    -> ('Russia', 'Europe', 17098246, 146793744),
    -> ('Guinea', 'Africa', 245857, 12218357),
    -> ('Finland', 'Europe', 338424, 5522018);
Query OK, 18 rows affected (0.01 sec)
Records: 18  Duplicates: 0  Warnings: 0

// Display table
mysql> select * from country;
+------------+--------------+-----------+-----------------+--------------------+
| Country_id | Country_name | Continent | Country_surface | Country_population |
+------------+--------------+-----------+-----------------+--------------------+
|          1 | China        | Asia      |         9596961 |         1396740000 |
|          2 | USA          | Americas  |         9525067 |          328972000 |
|          3 | India        | Asia      |         3287263 |         1345520000 |
|          4 | France       | Europe    |          640679 |           66989000 |
|          5 | Italy        | Europe    |          301339 |           60375749 |
|          6 | Thailand     | Asia      |          513120 |           66347555 |
|          7 | Netherlands  | Europe    |           41850 |           17309200 |
|          8 | Greece       | Europe    |          131990 |           10741165 |
|          9 | Brazil       | Americas  |         8515767 |          209729000 |
|         10 | Ethiopia     | Africa    |         1104300 |           98665000 |
|         11 | Morocco      | Africa    |          446550 |           34980000 |
|         12 | Sweden       | Europe    |          450295 |           10238627 |
|         13 | Australia    | Oceania   |         7692024 |           25312900 |
|         14 | Mexico       | Americas  |         1964375 |          126577691 |
|         15 | Germany      | Europe    |          357114 |           82979100 |
|         16 | Russia       | Europe    |        17098246 |          146793744 |
|         17 | Guinea       | Africa    |          245857 |           12218357 |
|         18 | Finland      | Europe    |          338424 |            5522018 |
+------------+--------------+-----------+-----------------+--------------------+

// I.4.1 Insert 10-20 rows in city table with relevant fields
mysql> INSERT INTO city (City_name, City_population, FK_country)
    -> VALUES
    -> ('Mexico City', 8875000, 14),
    -> ('Beijing', 20693000, 1),
    -> ('Paris', 2241346, 4),
    -> ('Stockholm', 1515017, 12),
    -> ('Helsinki', 6355910, 18),
    -> ('Rome', 2868104, 5),
    -> ('Conakry', 1399981, 17),
    -> ('Rabat', 1789635, 11),
    -> ('Berlin', 3520000, 15),
    -> ('Moscow', 11541000, 16),
    -> ('Canberra', 354644, 13),
    -> ('Athens', 3090508, 8),
    -> ('Addis Ababa', 3040740, 10),
    -> ('Amsterdam', 855965, 7),
    -> ('New Delhi', 16787949, 3),
    -> ('Bangkok', 8249117, 6),
    -> ('Toulouse', 471941, 4),
    -> ('Eindhoven', 209620, 7),
    -> ('New Orleans', 393292, 2);
Query OK, 19 rows affected (0.00 sec)
Records: 19  Duplicates: 0  Warnings: 0

// Display table
mysql> select * from city;
+---------+-------------+-----------------+------------+
| City_id | City_name   | City_population | FK_country |
+---------+-------------+-----------------+------------+
|       1 | Mexico City |         8875000 |         14 |
|       2 | Beijing     |        20693000 |          1 |
|       3 | Paris       |         2241346 |          4 |
|       4 | Stockholm   |         1515017 |         12 |
|       5 | Helsinki    |         6355910 |         18 |
|       6 | Rome        |         2868104 |          5 |
|       7 | Conakry     |         1399981 |         17 |
|       8 | Rabat       |         1789635 |         11 |
|       9 | Berlin      |         3520000 |         15 |
|      10 | Moscow      |        11541000 |         16 |
|      11 | Canberra    |          354644 |         13 |
|      12 | Athens      |         3090508 |          8 |
|      13 | Addis Ababa |         3040740 |         10 |
|      14 | Amsterdam   |          855965 |          7 |
|      15 | New Delhi   |        16787949 |          3 |
|      16 | Bangkok     |         8249117 |          6 |
|      17 | Toulouse    |          471941 |          4 |
|      18 | Eindhoven   |          209620 |          7 |
|      19 | New Orleans |          393292 |          2 |
+---------+-------------+-----------------+------------+
19 rows in set (0.00 sec)

// 1. Display the names of countries with population greater than 8 million
mysql> SELECT
    -> Country_name,
    -> Country_population
    -> FROM
    -> country
    -> WHERE
    -> Country_population > 8000000
    -> ORDER BY
    -> Country_population DESC;
+--------------+--------------------+
| Country_name | Country_population |
+--------------+--------------------+
| China        |         1396740000 |
| India        |         1345520000 |
| USA          |          328972000 |
| Brazil       |          209729000 |
| Russia       |          146793744 |
| Mexico       |          126577691 |
| Ethiopia     |           98665000 |
| Germany      |           82979100 |
| France       |           66989000 |
| Thailand     |           66347555 |
| Italy        |           60375749 |
| Morocco      |           34980000 |
| Australia    |           25312900 |
| Netherlands  |           17309200 |
| Guinea       |           12218357 |
| Greece       |           10741165 |
| Sweden       |           10238627 |
+--------------+--------------------+
17 rows in set (0.00 sec)

// 2. Display the names of countries that have “land” in their names
SELECT Country_name, LOCATE('land', Country_name) 
FROM country 
WHERE locate('land',Country_name)>0;
+--------------+------------------------------+
| Country_name | LOCATE('land', Country_name) |
+--------------+------------------------------+
| Thailand     |                            5 |
| Netherlands  |                            7 |
| Finland      |                            4 |
+--------------+------------------------------+
3 rows in set (0.00 sec)

// 3. Display the names of the cities with population in between 500,000 and 1 million
mysql> SELECT
    -> City_name,
    -> City_population
    -> FROM
    -> city
    -> WHERE
    -> City_population > 500000 AND City_population < 1000000
    -> ORDER BY
    -> City_population DESC;
+-----------+-----------------+
| City_name | City_population |
+-----------+-----------------+
| Amsterdam |          855965 |
+-----------+-----------------+
1 row in set (0.00 sec) 

// Other way to do it
mysql> SELECT
    -> City_name,
    -> City_population
    -> FROM
    -> city
    -> WHERE
    -> City_population BETWEEN 500000 AND 1000000
    -> ORDER BY
    -> City_population DESC;
+-----------+-----------------+
| City_name | City_population |
+-----------+-----------------+
| Amsterdam |          855965 |
| Rotterdam |          623652 |
+-----------+-----------------+
2 rows in set (0.00 sec)


// 4. Display the name of all the countries on the continent ‘Europe’
mysql> SELECT
    -> Country_name,
    -> Continent
    -> FROM
    -> country
    -> WHERE
    -> Continent = 'Europe'
    -> ORDER BY
    -> Country_name ASC;
+--------------+-----------+
| Country_name | Continent |
+--------------+-----------+
| Finland      | Europe    |
| France       | Europe    |
| Germany      | Europe    |
| Greece       | Europe    |
| Italy        | Europe    |
| Netherlands  | Europe    |
| Russia       | Europe    |
| Sweden       | Europe    |
+--------------+-----------+
8 rows in set (0.00 sec)


// 5. Display a list of all the countries in the descending order of their surface areas
mysql> SELECT
    -> Country_name,
    -> Country_surface
    -> FROM
    -> country
    -> ORDER BY
    -> Country_surface DESC;
+--------------+-----------------+
| Country_name | Country_surface |
+--------------+-----------------+
| Russia       |        17098246 |
| China        |         9596961 |
| USA          |         9525067 |
| Brazil       |         8515767 |
| Australia    |         7692024 |
| India        |         3287263 |
| Mexico       |         1964375 |
| Ethiopia     |         1104300 |
| France       |          640679 |
| Thailand     |          513120 |
| Sweden       |          450295 |
| Morocco      |          446550 |
| Germany      |          357114 |
| Finland      |          338424 |
| Italy        |          301339 |
| Guinea       |          245857 |
| Greece       |          131990 |
| Netherlands  |           41850 |
+--------------+-----------------+
18 rows in set (0.00 sec)

// 6. Display the names of all the cities in the Netherlands
mysql> SELECT
    -> City_name,
    -> FK_country
    -> FROM
    -> city
    -> WHERE
    -> FK_country = 7
    -> ORDER BY
    -> City_name ASC;
+-----------+------------+
| City_name | FK_country |
+-----------+------------+
| Amsterdam |          7 |
| Eindhoven |          7 |
+-----------+------------+
2 rows in set (0.00 sec)

// 7. Display the population of Rotterdam
// add 'Rotterdam' to city
mysql> INSERT INTO city (City_name, City_population, FK_country)
    -> VALUES
    -> ('Rotterdam', 623652, 7);
Query OK, 1 row affected (0.01 sec)
// Display the population of Rotterdam
mysql> SELECT
    -> City_name,
    -> City_population
    -> FROM
    -> city
    -> WHERE
    -> City_name = 'Rotterdam';
+-----------+-----------------+
| City_name | City_population |
+-----------+-----------------+
| Rotterdam |          623652 |
+-----------+-----------------+
1 row in set (0.00 sec)

//8. Display the top 10 countries by Surface Area
mysql> SELECT
    -> Country_name,
    -> Country_surface
    -> FROM
    -> country
    -> ORDER BY
    -> Country_surface DESC
    -> LIMIT 10;
+--------------+-----------------+
| Country_name | Country_surface |
+--------------+-----------------+
| Russia       |        17098246 |
| China        |         9596961 |
| USA          |         9525067 |
| Brazil       |         8515767 |
| Australia    |         7692024 |
| India        |         3287263 |
| Mexico       |         1964375 |
| Ethiopia     |         1104300 |
| France       |          640679 |
| Thailand     |          513120 |
+--------------+-----------------+
10 rows in set (0.00 sec)

// 9. Display the top 10 most populated cities
mysql> SELECT
    -> City_name,
    -> City_population
    -> FROM
    -> city
    -> ORDER BY
    -> City_population DESC
    -> LIMIT 10;
+-------------+-----------------+
| City_name   | City_population |
+-------------+-----------------+
| Beijing     |        20693000 |
| New Delhi   |        16787949 |
| Moscow      |        11541000 |
| Mexico City |         8875000 |
| Bangkok     |         8249117 |
| Helsinki    |         6355910 |
| Berlin      |         3520000 |
| Athens      |         3090508 |
| Addis Ababa |         3040740 |
| Rome        |         2868104 |
+-------------+-----------------+
10 rows in set (0.00 sec)

// 10. What is the population of the world ?
// Diplay the total population from this database
mysql> SELECT SUM(Country_population) AS "Total Population"
    -> FROM country;
+------------------+
| Total Population |
+------------------+
|       4046011106 |
+------------------+
1 row in set (0.00 sec)

// But! Total World Population: 7600000000;

// *------------------ OTHER TESTS -------------------
// Add column
mysql> ALTER TABLE city
    -> ADD COLUMN City_newcol INT AFTER FK_country;
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

// Delete column
mysql> ALTER TABLE city
    -> DROP COLUMN City_newcol;
Query OK, 0 rows affected (0.07 sec)
Records: 0  Duplicates: 0  Warnings: 0

// 6.1 OTHER WAY TO DO IT: Display the names of all the cities in the Netherlands

mysql> SELECT City_name from city
    -> INNER JOIN country on city.FK_country = country.Country_id
    -> WHERE country.Country_name = 'Netherlands';
+-----------+
| City_name |
+-----------+
| Amsterdam |
| Eindhoven |
| Rotterdam |
+-----------+
3 rows in set (0.00 sec)

// Display the number of cities in each country
mysql> SELECT FK_country, COUNT(*) FROM city GROUP BY FK_country;
+------------+----------+
| FK_country | COUNT(*) |
+------------+----------+
|          1 |        1 |
|          2 |        1 |
|          3 |        1 |
|          4 |        2 |
|          5 |        1 |
|          6 |        1 |
|          7 |        3 |
|          8 |        1 |
|         10 |        1 |
|         11 |        1 |
|         12 |        1 |
|         13 |        1 |
|         14 |        1 |
|         15 |        1 |
|         16 |        1 |
|         17 |        1 |
|         18 |        1 |
+------------+----------+
17 rows in set (0.02 sec)

// Display unique results of continents
mysql> SELECT DISTINCT continent from country;
+-----------+
| continent |
+-----------+
| Asia      |
| Americas  |
| Europe    |
| Africa    |
| Oceania   |
+-----------+
5 rows in set (0.02 sec)

// Display the length of a string
mysql> SELECT LENGTH('string');
+------------------+
| LENGTH('string') |
+------------------+
|                6 |
+------------------+
1 row in set (0.00 sec)

// Display names of countries ordered by string length and country name
mysql> SELECT Country_name as cn, LENGTH(Country_name) as lcn FROM country ORDER BY lcn DESC, cn ASC;
+-------------+-----+
| cn          | lcn |
+-------------+-----+
| Netherlands |  11 |
| Australia   |   9 |
| Ethiopia    |   8 |
| Thailand    |   8 |
| Finland     |   7 |
| Germany     |   7 |
| Morocco     |   7 |
| Brazil      |   6 |
| France      |   6 |
| Greece      |   6 |
| Guinea      |   6 |
| Mexico      |   6 |
| Russia      |   6 |
| Sweden      |   6 |
| China       |   5 |
| India       |   5 |
| Italy       |   5 |
| USA         |   3 |
+-------------+-----+
18 rows in set (0.00 sec)

mysql> SELECT COUNT(*) FROM city;
+----------+
| COUNT(*) |
+----------+
|     4079 |
+----------+
1 row in set (0.00 sec)

mysql> SELECT Capital, COUNT(*) FROM country;
+---------+----------+
| Capital | COUNT(*) |
+---------+----------+
|     129 |      239 |
+---------+----------+
1 row in set (0.00 sec)

